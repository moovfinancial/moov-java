/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class AssignProductImage {
    /**
     * Unique identifier for a product or product option image resource.
     */
    @JsonProperty("imageID")
    private String imageID;

    @JsonCreator
    public AssignProductImage(
            @JsonProperty("imageID") String imageID) {
        Utils.checkNotNull(imageID, "imageID");
        this.imageID = imageID;
    }

    /**
     * Unique identifier for a product or product option image resource.
     */
    @JsonIgnore
    public String imageID() {
        return imageID;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Unique identifier for a product or product option image resource.
     */
    public AssignProductImage withImageID(String imageID) {
        Utils.checkNotNull(imageID, "imageID");
        this.imageID = imageID;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AssignProductImage other = (AssignProductImage) o;
        return 
            Utils.enhancedDeepEquals(this.imageID, other.imageID);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            imageID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AssignProductImage.class,
                "imageID", imageID);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String imageID;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Unique identifier for a product or product option image resource.
         */
        public Builder imageID(String imageID) {
            Utils.checkNotNull(imageID, "imageID");
            this.imageID = imageID;
            return this;
        }

        public AssignProductImage build() {

            return new AssignProductImage(
                imageID);
        }

    }
}
