/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class EnrichedIndustryCodes {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("naics")
    private Optional<String> naics;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sic")
    private Optional<String> sic;

    @JsonCreator
    public EnrichedIndustryCodes(
            @JsonProperty("naics") Optional<String> naics,
            @JsonProperty("sic") Optional<String> sic) {
        Utils.checkNotNull(naics, "naics");
        Utils.checkNotNull(sic, "sic");
        this.naics = naics;
        this.sic = sic;
    }
    
    public EnrichedIndustryCodes() {
        this(Optional.empty(), Optional.empty());
    }

    @JsonIgnore
    public Optional<String> naics() {
        return naics;
    }

    @JsonIgnore
    public Optional<String> sic() {
        return sic;
    }

    public static Builder builder() {
        return new Builder();
    }


    public EnrichedIndustryCodes withNaics(String naics) {
        Utils.checkNotNull(naics, "naics");
        this.naics = Optional.ofNullable(naics);
        return this;
    }


    public EnrichedIndustryCodes withNaics(Optional<String> naics) {
        Utils.checkNotNull(naics, "naics");
        this.naics = naics;
        return this;
    }

    public EnrichedIndustryCodes withSic(String sic) {
        Utils.checkNotNull(sic, "sic");
        this.sic = Optional.ofNullable(sic);
        return this;
    }


    public EnrichedIndustryCodes withSic(Optional<String> sic) {
        Utils.checkNotNull(sic, "sic");
        this.sic = sic;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EnrichedIndustryCodes other = (EnrichedIndustryCodes) o;
        return 
            Utils.enhancedDeepEquals(this.naics, other.naics) &&
            Utils.enhancedDeepEquals(this.sic, other.sic);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            naics, sic);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EnrichedIndustryCodes.class,
                "naics", naics,
                "sic", sic);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<String> naics = Optional.empty();

        private Optional<String> sic = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        public Builder naics(String naics) {
            Utils.checkNotNull(naics, "naics");
            this.naics = Optional.ofNullable(naics);
            return this;
        }

        public Builder naics(Optional<String> naics) {
            Utils.checkNotNull(naics, "naics");
            this.naics = naics;
            return this;
        }


        public Builder sic(String sic) {
            Utils.checkNotNull(sic, "sic");
            this.sic = Optional.ofNullable(sic);
            return this;
        }

        public Builder sic(Optional<String> sic) {
            Utils.checkNotNull(sic, "sic");
            this.sic = sic;
            return this;
        }

        public EnrichedIndustryCodes build() {

            return new EnrichedIndustryCodes(
                naics, sic);
        }

    }
}
