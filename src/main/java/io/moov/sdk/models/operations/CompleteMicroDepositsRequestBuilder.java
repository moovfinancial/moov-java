/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.models.components.CompleteMicroDeposits;
import io.moov.sdk.utils.Headers;
import io.moov.sdk.utils.Utils;
import java.lang.String;

public class CompleteMicroDepositsRequestBuilder {

    private String accountID;
    private String bankAccountID;
    private CompleteMicroDeposits completeMicroDeposits;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CompleteMicroDepositsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CompleteMicroDepositsRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public CompleteMicroDepositsRequestBuilder bankAccountID(String bankAccountID) {
        Utils.checkNotNull(bankAccountID, "bankAccountID");
        this.bankAccountID = bankAccountID;
        return this;
    }

    public CompleteMicroDepositsRequestBuilder completeMicroDeposits(CompleteMicroDeposits completeMicroDeposits) {
        Utils.checkNotNull(completeMicroDeposits, "completeMicroDeposits");
        this.completeMicroDeposits = completeMicroDeposits;
        return this;
    }


    private CompleteMicroDepositsRequest buildRequest() {

        CompleteMicroDepositsRequest request = new CompleteMicroDepositsRequest(accountID,
            bankAccountID,
            completeMicroDeposits);

        return request;
    }

    public CompleteMicroDepositsResponse call() {
        
        RequestOperation<CompleteMicroDepositsRequest, CompleteMicroDepositsResponse> operation
              = new io.moov.sdk.operations.CompleteMicroDeposits.Sync(sdkConfiguration, _headers);
        CompleteMicroDepositsRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
