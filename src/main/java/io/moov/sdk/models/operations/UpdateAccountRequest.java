/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.moov.sdk.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.moov.sdk.models.components.CreateAccountUpdate;
import io.moov.sdk.models.components.Versions;
import io.moov.sdk.utils.SpeakeasyMetadata;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class UpdateAccountRequest {

    /**
     * Specify an API version.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-moov-version")
    private Optional<? extends Versions> xMoovVersion;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=accountID")
    private String accountID;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private CreateAccountUpdate createAccountUpdate;

    @JsonCreator
    public UpdateAccountRequest(
            Optional<? extends Versions> xMoovVersion,
            String accountID,
            CreateAccountUpdate createAccountUpdate) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        Utils.checkNotNull(accountID, "accountID");
        Utils.checkNotNull(createAccountUpdate, "createAccountUpdate");
        this.xMoovVersion = xMoovVersion;
        this.accountID = accountID;
        this.createAccountUpdate = createAccountUpdate;
    }
    
    public UpdateAccountRequest(
            String accountID,
            CreateAccountUpdate createAccountUpdate) {
        this(Optional.empty(), accountID, createAccountUpdate);
    }

    /**
     * Specify an API version.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Versions> xMoovVersion() {
        return (Optional<Versions>) xMoovVersion;
    }

    @JsonIgnore
    public String accountID() {
        return accountID;
    }

    @JsonIgnore
    public CreateAccountUpdate createAccountUpdate() {
        return createAccountUpdate;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Specify an API version.
     */
    public UpdateAccountRequest withXMoovVersion(Versions xMoovVersion) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        this.xMoovVersion = Optional.ofNullable(xMoovVersion);
        return this;
    }

    /**
     * Specify an API version.
     */
    public UpdateAccountRequest withXMoovVersion(Optional<? extends Versions> xMoovVersion) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        this.xMoovVersion = xMoovVersion;
        return this;
    }

    public UpdateAccountRequest withAccountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public UpdateAccountRequest withCreateAccountUpdate(CreateAccountUpdate createAccountUpdate) {
        Utils.checkNotNull(createAccountUpdate, "createAccountUpdate");
        this.createAccountUpdate = createAccountUpdate;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateAccountRequest other = (UpdateAccountRequest) o;
        return 
            Objects.deepEquals(this.xMoovVersion, other.xMoovVersion) &&
            Objects.deepEquals(this.accountID, other.accountID) &&
            Objects.deepEquals(this.createAccountUpdate, other.createAccountUpdate);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            xMoovVersion,
            accountID,
            createAccountUpdate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateAccountRequest.class,
                "xMoovVersion", xMoovVersion,
                "accountID", accountID,
                "createAccountUpdate", createAccountUpdate);
    }
    
    public final static class Builder {
 
        private Optional<? extends Versions> xMoovVersion = Optional.empty();
 
        private String accountID;
 
        private CreateAccountUpdate createAccountUpdate;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Specify an API version.
         */
        public Builder xMoovVersion(Versions xMoovVersion) {
            Utils.checkNotNull(xMoovVersion, "xMoovVersion");
            this.xMoovVersion = Optional.ofNullable(xMoovVersion);
            return this;
        }

        /**
         * Specify an API version.
         */
        public Builder xMoovVersion(Optional<? extends Versions> xMoovVersion) {
            Utils.checkNotNull(xMoovVersion, "xMoovVersion");
            this.xMoovVersion = xMoovVersion;
            return this;
        }

        public Builder accountID(String accountID) {
            Utils.checkNotNull(accountID, "accountID");
            this.accountID = accountID;
            return this;
        }

        public Builder createAccountUpdate(CreateAccountUpdate createAccountUpdate) {
            Utils.checkNotNull(createAccountUpdate, "createAccountUpdate");
            this.createAccountUpdate = createAccountUpdate;
            return this;
        }
        
        public UpdateAccountRequest build() {
            return new UpdateAccountRequest(
                xMoovVersion,
                accountID,
                createAccountUpdate);
        }
    }
}

