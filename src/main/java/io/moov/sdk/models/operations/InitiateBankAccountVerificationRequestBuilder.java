/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.models.components.BankAccountWaitFor;
import io.moov.sdk.operations.InitiateBankAccountVerificationOperation;
import io.moov.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class InitiateBankAccountVerificationRequestBuilder {

    private Optional<? extends BankAccountWaitFor> xWaitFor = Optional.empty();
    private String accountID;
    private String bankAccountID;
    private final SDKConfiguration sdkConfiguration;

    public InitiateBankAccountVerificationRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public InitiateBankAccountVerificationRequestBuilder xWaitFor(BankAccountWaitFor xWaitFor) {
        Utils.checkNotNull(xWaitFor, "xWaitFor");
        this.xWaitFor = Optional.of(xWaitFor);
        return this;
    }

    public InitiateBankAccountVerificationRequestBuilder xWaitFor(Optional<? extends BankAccountWaitFor> xWaitFor) {
        Utils.checkNotNull(xWaitFor, "xWaitFor");
        this.xWaitFor = xWaitFor;
        return this;
    }

    public InitiateBankAccountVerificationRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public InitiateBankAccountVerificationRequestBuilder bankAccountID(String bankAccountID) {
        Utils.checkNotNull(bankAccountID, "bankAccountID");
        this.bankAccountID = bankAccountID;
        return this;
    }


    private InitiateBankAccountVerificationRequest buildRequest() {

        InitiateBankAccountVerificationRequest request = new InitiateBankAccountVerificationRequest(xWaitFor,
            accountID,
            bankAccountID);

        return request;
    }

    public InitiateBankAccountVerificationResponse call() throws Exception {
        
        RequestOperation<InitiateBankAccountVerificationRequest, InitiateBankAccountVerificationResponse> operation
              = new InitiateBankAccountVerificationOperation( sdkConfiguration);
        InitiateBankAccountVerificationRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
