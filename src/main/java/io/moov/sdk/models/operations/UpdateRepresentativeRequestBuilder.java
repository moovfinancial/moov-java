/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.models.components.UpdateRepresentative;
import io.moov.sdk.operations.UpdateRepresentativeOperation;
import io.moov.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;

public class UpdateRepresentativeRequestBuilder {

    private String accountID;
    private String representativeID;
    private UpdateRepresentative updateRepresentative;
    private final SDKConfiguration sdkConfiguration;

    public UpdateRepresentativeRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public UpdateRepresentativeRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public UpdateRepresentativeRequestBuilder representativeID(String representativeID) {
        Utils.checkNotNull(representativeID, "representativeID");
        this.representativeID = representativeID;
        return this;
    }

    public UpdateRepresentativeRequestBuilder updateRepresentative(UpdateRepresentative updateRepresentative) {
        Utils.checkNotNull(updateRepresentative, "updateRepresentative");
        this.updateRepresentative = updateRepresentative;
        return this;
    }


    private UpdateRepresentativeRequest buildRequest() {

        UpdateRepresentativeRequest request = new UpdateRepresentativeRequest(accountID,
            representativeID,
            updateRepresentative);

        return request;
    }

    public UpdateRepresentativeResponse call() throws Exception {
        
        RequestOperation<UpdateRepresentativeRequest, UpdateRepresentativeResponse> operation
              = new UpdateRepresentativeOperation(sdkConfiguration);
        UpdateRepresentativeRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
