/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.moov.sdk.models.operations;

import io.moov.sdk.models.components.LinkCard;
import io.moov.sdk.models.components.LinkCardWaitFor;
import io.moov.sdk.models.components.Versions;
import io.moov.sdk.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class LinkCardRequestBuilder {

    private Optional<? extends Versions> xMoovVersion = Optional.empty();
    private Optional<? extends LinkCardWaitFor> xWaitFor = Optional.empty();
    private String accountID;
    private LinkCard linkCard;
    private final SDKMethodInterfaces.MethodCallLinkCard sdk;

    public LinkCardRequestBuilder(SDKMethodInterfaces.MethodCallLinkCard sdk) {
        this.sdk = sdk;
    }
                
    public LinkCardRequestBuilder xMoovVersion(Versions xMoovVersion) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        this.xMoovVersion = Optional.of(xMoovVersion);
        return this;
    }

    public LinkCardRequestBuilder xMoovVersion(Optional<? extends Versions> xMoovVersion) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        this.xMoovVersion = xMoovVersion;
        return this;
    }
                
    public LinkCardRequestBuilder xWaitFor(LinkCardWaitFor xWaitFor) {
        Utils.checkNotNull(xWaitFor, "xWaitFor");
        this.xWaitFor = Optional.of(xWaitFor);
        return this;
    }

    public LinkCardRequestBuilder xWaitFor(Optional<? extends LinkCardWaitFor> xWaitFor) {
        Utils.checkNotNull(xWaitFor, "xWaitFor");
        this.xWaitFor = xWaitFor;
        return this;
    }

    public LinkCardRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public LinkCardRequestBuilder linkCard(LinkCard linkCard) {
        Utils.checkNotNull(linkCard, "linkCard");
        this.linkCard = linkCard;
        return this;
    }

    public LinkCardResponse call() throws Exception {

        return sdk.link(
            xMoovVersion,
            xWaitFor,
            accountID,
            linkCard);
    }
}
