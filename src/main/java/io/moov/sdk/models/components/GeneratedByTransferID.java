/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package io.moov.sdk.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class GeneratedByTransferID {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferID")
    private Optional<String> transferID;

    @JsonCreator
    public GeneratedByTransferID(
            @JsonProperty("transferID") Optional<String> transferID) {
        Utils.checkNotNull(transferID, "transferID");
        this.transferID = transferID;
    }
    
    public GeneratedByTransferID() {
        this(Optional.empty());
    }

    @JsonIgnore
    public Optional<String> transferID() {
        return transferID;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GeneratedByTransferID withTransferID(String transferID) {
        Utils.checkNotNull(transferID, "transferID");
        this.transferID = Optional.ofNullable(transferID);
        return this;
    }

    public GeneratedByTransferID withTransferID(Optional<String> transferID) {
        Utils.checkNotNull(transferID, "transferID");
        this.transferID = transferID;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GeneratedByTransferID other = (GeneratedByTransferID) o;
        return 
            Objects.deepEquals(this.transferID, other.transferID);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            transferID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GeneratedByTransferID.class,
                "transferID", transferID);
    }
    
    public final static class Builder {
 
        private Optional<String> transferID = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder transferID(String transferID) {
            Utils.checkNotNull(transferID, "transferID");
            this.transferID = Optional.ofNullable(transferID);
            return this;
        }

        public Builder transferID(Optional<String> transferID) {
            Utils.checkNotNull(transferID, "transferID");
            this.transferID = transferID;
            return this;
        }
        
        public GeneratedByTransferID build() {
            return new GeneratedByTransferID(
                transferID);
        }
    }
}

