/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package io.moov.sdk.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class FinancialInstitutions {

    @JsonProperty("achParticipants")
    private List<AchParticipant> achParticipants;

    @JsonCreator
    public FinancialInstitutions(
            @JsonProperty("achParticipants") List<AchParticipant> achParticipants) {
        Utils.checkNotNull(achParticipants, "achParticipants");
        this.achParticipants = achParticipants;
    }

    @JsonIgnore
    public List<AchParticipant> achParticipants() {
        return achParticipants;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public FinancialInstitutions withAchParticipants(List<AchParticipant> achParticipants) {
        Utils.checkNotNull(achParticipants, "achParticipants");
        this.achParticipants = achParticipants;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FinancialInstitutions other = (FinancialInstitutions) o;
        return 
            Objects.deepEquals(this.achParticipants, other.achParticipants);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            achParticipants);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FinancialInstitutions.class,
                "achParticipants", achParticipants);
    }
    
    public final static class Builder {
 
        private List<AchParticipant> achParticipants;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder achParticipants(List<AchParticipant> achParticipants) {
            Utils.checkNotNull(achParticipants, "achParticipants");
            this.achParticipants = achParticipants;
            return this;
        }
        
        public FinancialInstitutions build() {
            return new FinancialInstitutions(
                achParticipants);
        }
    }
}

