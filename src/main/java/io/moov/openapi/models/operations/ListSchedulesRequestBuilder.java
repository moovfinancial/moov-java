/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.moov.openapi.models.operations;

import io.moov.openapi.models.components.Versions;
import io.moov.openapi.utils.Utils;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;

public class ListSchedulesRequestBuilder {

    private ListSchedulesSecurity security;
    private Optional<? extends Versions> xMoovVersion = Optional.empty();
    private Optional<Long> skip = Optional.empty();
    private Optional<Long> count = Optional.empty();
    private String accountID;
    private final SDKMethodInterfaces.MethodCallListSchedules sdk;

    public ListSchedulesRequestBuilder(SDKMethodInterfaces.MethodCallListSchedules sdk) {
        this.sdk = sdk;
    }

    public ListSchedulesRequestBuilder security(ListSchedulesSecurity security) {
        Utils.checkNotNull(security, "security");
        this.security = security;
        return this;
    }
                
    public ListSchedulesRequestBuilder xMoovVersion(Versions xMoovVersion) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        this.xMoovVersion = Optional.of(xMoovVersion);
        return this;
    }

    public ListSchedulesRequestBuilder xMoovVersion(Optional<? extends Versions> xMoovVersion) {
        Utils.checkNotNull(xMoovVersion, "xMoovVersion");
        this.xMoovVersion = xMoovVersion;
        return this;
    }
                
    public ListSchedulesRequestBuilder skip(long skip) {
        Utils.checkNotNull(skip, "skip");
        this.skip = Optional.of(skip);
        return this;
    }

    public ListSchedulesRequestBuilder skip(Optional<Long> skip) {
        Utils.checkNotNull(skip, "skip");
        this.skip = skip;
        return this;
    }
                
    public ListSchedulesRequestBuilder count(long count) {
        Utils.checkNotNull(count, "count");
        this.count = Optional.of(count);
        return this;
    }

    public ListSchedulesRequestBuilder count(Optional<Long> count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }

    public ListSchedulesRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public ListSchedulesResponse call() throws Exception {

        return sdk.listSchedules(
            security,
            xMoovVersion,
            skip,
            count,
            accountID);
    }
}
