/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

public class GeneratedByBankAccountID {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BankAccountID")
    private Optional<String> bankAccountID;

    @JsonCreator
    public GeneratedByBankAccountID(
            @JsonProperty("BankAccountID") Optional<String> bankAccountID) {
        Utils.checkNotNull(bankAccountID, "bankAccountID");
        this.bankAccountID = bankAccountID;
    }
    
    public GeneratedByBankAccountID() {
        this(Optional.empty());
    }

    @JsonIgnore
    public Optional<String> bankAccountID() {
        return bankAccountID;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public GeneratedByBankAccountID withBankAccountID(String bankAccountID) {
        Utils.checkNotNull(bankAccountID, "bankAccountID");
        this.bankAccountID = Optional.ofNullable(bankAccountID);
        return this;
    }

    public GeneratedByBankAccountID withBankAccountID(Optional<String> bankAccountID) {
        Utils.checkNotNull(bankAccountID, "bankAccountID");
        this.bankAccountID = bankAccountID;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GeneratedByBankAccountID other = (GeneratedByBankAccountID) o;
        return 
            Utils.enhancedDeepEquals(this.bankAccountID, other.bankAccountID);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            bankAccountID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GeneratedByBankAccountID.class,
                "bankAccountID", bankAccountID);
    }
    
    public final static class Builder {
 
        private Optional<String> bankAccountID = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder bankAccountID(String bankAccountID) {
            Utils.checkNotNull(bankAccountID, "bankAccountID");
            this.bankAccountID = Optional.ofNullable(bankAccountID);
            return this;
        }

        public Builder bankAccountID(Optional<String> bankAccountID) {
            Utils.checkNotNull(bankAccountID, "bankAccountID");
            this.bankAccountID = bankAccountID;
            return this;
        }
        
        public GeneratedByBankAccountID build() {
            return new GeneratedByBankAccountID(
                bankAccountID);
        }
    }
}
