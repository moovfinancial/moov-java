// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type Ticket struct {
	TicketID        string        `json:"ticketID"`
	Number          int64         `json:"number"`
	Title           string        `json:"title"`
	Contact         TicketContact `json:"contact"`
	Status          TicketStatus  `json:"status"`
	CreatedOn       time.Time     `json:"createdOn"`
	UpdatedOn       time.Time     `json:"updatedOn"`
	LatestMessageOn *time.Time    `json:"latestMessageOn,omitempty"`
	ClosedOn        *time.Time    `json:"closedOn,omitempty"`
}

func (t Ticket) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *Ticket) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Ticket) GetTicketID() string {
	if o == nil {
		return ""
	}
	return o.TicketID
}

func (o *Ticket) GetNumber() int64 {
	if o == nil {
		return 0
	}
	return o.Number
}

func (o *Ticket) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *Ticket) GetContact() TicketContact {
	if o == nil {
		return TicketContact{}
	}
	return o.Contact
}

func (o *Ticket) GetStatus() TicketStatus {
	if o == nil {
		return TicketStatus("")
	}
	return o.Status
}

func (o *Ticket) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *Ticket) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}

func (o *Ticket) GetLatestMessageOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LatestMessageOn
}

func (o *Ticket) GetClosedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.ClosedOn
}
