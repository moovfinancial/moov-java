/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.operations.GetDisputeEvidenceData;
import io.moov.sdk.utils.Headers;
import io.moov.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;

public class GetDisputeEvidenceDataRequestBuilder {

    private String accountID;
    private String disputeID;
    private String evidenceID;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public GetDisputeEvidenceDataRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetDisputeEvidenceDataRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public GetDisputeEvidenceDataRequestBuilder disputeID(String disputeID) {
        Utils.checkNotNull(disputeID, "disputeID");
        this.disputeID = disputeID;
        return this;
    }

    public GetDisputeEvidenceDataRequestBuilder evidenceID(String evidenceID) {
        Utils.checkNotNull(evidenceID, "evidenceID");
        this.evidenceID = evidenceID;
        return this;
    }


    private GetDisputeEvidenceDataRequest buildRequest() {

        GetDisputeEvidenceDataRequest request = new GetDisputeEvidenceDataRequest(accountID,
            disputeID,
            evidenceID);

        return request;
    }

    public GetDisputeEvidenceDataResponse call() throws Exception {
        
        RequestOperation<GetDisputeEvidenceDataRequest, GetDisputeEvidenceDataResponse> operation
              = new GetDisputeEvidenceData.Sync(sdkConfiguration, _headers);
        GetDisputeEvidenceDataRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
