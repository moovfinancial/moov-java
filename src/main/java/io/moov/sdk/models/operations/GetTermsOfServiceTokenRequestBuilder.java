/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.operations.GetTermsOfServiceTokenOperation;
import io.moov.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class GetTermsOfServiceTokenRequestBuilder {

    private Optional<String> origin = Optional.empty();
    private Optional<String> referer = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public GetTermsOfServiceTokenRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public GetTermsOfServiceTokenRequestBuilder origin(String origin) {
        Utils.checkNotNull(origin, "origin");
        this.origin = Optional.of(origin);
        return this;
    }

    public GetTermsOfServiceTokenRequestBuilder origin(Optional<String> origin) {
        Utils.checkNotNull(origin, "origin");
        this.origin = origin;
        return this;
    }
                
    public GetTermsOfServiceTokenRequestBuilder referer(String referer) {
        Utils.checkNotNull(referer, "referer");
        this.referer = Optional.of(referer);
        return this;
    }

    public GetTermsOfServiceTokenRequestBuilder referer(Optional<String> referer) {
        Utils.checkNotNull(referer, "referer");
        this.referer = referer;
        return this;
    }


    private GetTermsOfServiceTokenRequest buildRequest() {

        GetTermsOfServiceTokenRequest request = new GetTermsOfServiceTokenRequest(origin,
            referer);

        return request;
    }

    public GetTermsOfServiceTokenResponse call() throws Exception {
        
        RequestOperation<GetTermsOfServiceTokenRequest, GetTermsOfServiceTokenResponse> operation
              = new GetTermsOfServiceTokenOperation( sdkConfiguration);
        GetTermsOfServiceTokenRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
