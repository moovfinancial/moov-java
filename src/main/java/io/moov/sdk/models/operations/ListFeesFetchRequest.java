/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.moov.sdk.utils.SpeakeasyMetadata;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class ListFeesFetchRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=accountID")
    private String accountID;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends io.moov.sdk.models.components.ListFeesFetchRequest> listFeesFetchRequest;

    @JsonCreator
    public ListFeesFetchRequest(
            String accountID,
            Optional<? extends io.moov.sdk.models.components.ListFeesFetchRequest> listFeesFetchRequest) {
        Utils.checkNotNull(accountID, "accountID");
        Utils.checkNotNull(listFeesFetchRequest, "listFeesFetchRequest");
        this.accountID = accountID;
        this.listFeesFetchRequest = listFeesFetchRequest;
    }
    
    public ListFeesFetchRequest(
            String accountID) {
        this(accountID, Optional.empty());
    }

    @JsonIgnore
    public String accountID() {
        return accountID;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<io.moov.sdk.models.components.ListFeesFetchRequest> listFeesFetchRequest() {
        return (Optional<io.moov.sdk.models.components.ListFeesFetchRequest>) listFeesFetchRequest;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public ListFeesFetchRequest withAccountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public ListFeesFetchRequest withListFeesFetchRequest(io.moov.sdk.models.components.ListFeesFetchRequest listFeesFetchRequest) {
        Utils.checkNotNull(listFeesFetchRequest, "listFeesFetchRequest");
        this.listFeesFetchRequest = Optional.ofNullable(listFeesFetchRequest);
        return this;
    }

    public ListFeesFetchRequest withListFeesFetchRequest(Optional<? extends io.moov.sdk.models.components.ListFeesFetchRequest> listFeesFetchRequest) {
        Utils.checkNotNull(listFeesFetchRequest, "listFeesFetchRequest");
        this.listFeesFetchRequest = listFeesFetchRequest;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListFeesFetchRequest other = (ListFeesFetchRequest) o;
        return 
            Objects.deepEquals(this.accountID, other.accountID) &&
            Objects.deepEquals(this.listFeesFetchRequest, other.listFeesFetchRequest);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accountID,
            listFeesFetchRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListFeesFetchRequest.class,
                "accountID", accountID,
                "listFeesFetchRequest", listFeesFetchRequest);
    }
    
    public final static class Builder {
 
        private String accountID;
 
        private Optional<? extends io.moov.sdk.models.components.ListFeesFetchRequest> listFeesFetchRequest = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder accountID(String accountID) {
            Utils.checkNotNull(accountID, "accountID");
            this.accountID = accountID;
            return this;
        }

        public Builder listFeesFetchRequest(io.moov.sdk.models.components.ListFeesFetchRequest listFeesFetchRequest) {
            Utils.checkNotNull(listFeesFetchRequest, "listFeesFetchRequest");
            this.listFeesFetchRequest = Optional.ofNullable(listFeesFetchRequest);
            return this;
        }

        public Builder listFeesFetchRequest(Optional<? extends io.moov.sdk.models.components.ListFeesFetchRequest> listFeesFetchRequest) {
            Utils.checkNotNull(listFeesFetchRequest, "listFeesFetchRequest");
            this.listFeesFetchRequest = listFeesFetchRequest;
            return this;
        }
        
        public ListFeesFetchRequest build() {
            return new ListFeesFetchRequest(
                accountID,
                listFeesFetchRequest);
        }
    }
}
