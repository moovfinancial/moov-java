/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class WebhookDataCancellationCreated {

    @JsonProperty("cancellationID")
    private String cancellationID;


    @JsonProperty("transferID")
    private String transferID;


    @JsonProperty("status")
    private CancellationStatus status;

    @JsonCreator
    public WebhookDataCancellationCreated(
            @JsonProperty("cancellationID") String cancellationID,
            @JsonProperty("transferID") String transferID,
            @JsonProperty("status") CancellationStatus status) {
        Utils.checkNotNull(cancellationID, "cancellationID");
        Utils.checkNotNull(transferID, "transferID");
        Utils.checkNotNull(status, "status");
        this.cancellationID = cancellationID;
        this.transferID = transferID;
        this.status = status;
    }

    @JsonIgnore
    public String cancellationID() {
        return cancellationID;
    }

    @JsonIgnore
    public String transferID() {
        return transferID;
    }

    @JsonIgnore
    public CancellationStatus status() {
        return status;
    }

    public static Builder builder() {
        return new Builder();
    }


    public WebhookDataCancellationCreated withCancellationID(String cancellationID) {
        Utils.checkNotNull(cancellationID, "cancellationID");
        this.cancellationID = cancellationID;
        return this;
    }

    public WebhookDataCancellationCreated withTransferID(String transferID) {
        Utils.checkNotNull(transferID, "transferID");
        this.transferID = transferID;
        return this;
    }

    public WebhookDataCancellationCreated withStatus(CancellationStatus status) {
        Utils.checkNotNull(status, "status");
        this.status = status;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WebhookDataCancellationCreated other = (WebhookDataCancellationCreated) o;
        return 
            Utils.enhancedDeepEquals(this.cancellationID, other.cancellationID) &&
            Utils.enhancedDeepEquals(this.transferID, other.transferID) &&
            Utils.enhancedDeepEquals(this.status, other.status);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            cancellationID, transferID, status);
    }
    
    @Override
    public String toString() {
        return Utils.toString(WebhookDataCancellationCreated.class,
                "cancellationID", cancellationID,
                "transferID", transferID,
                "status", status);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String cancellationID;

        private String transferID;

        private CancellationStatus status;

        private Builder() {
          // force use of static builder() method
        }


        public Builder cancellationID(String cancellationID) {
            Utils.checkNotNull(cancellationID, "cancellationID");
            this.cancellationID = cancellationID;
            return this;
        }


        public Builder transferID(String transferID) {
            Utils.checkNotNull(transferID, "transferID");
            this.transferID = transferID;
            return this;
        }


        public Builder status(CancellationStatus status) {
            Utils.checkNotNull(status, "status");
            this.status = status;
            return this;
        }

        public WebhookDataCancellationCreated build() {

            return new WebhookDataCancellationCreated(
                cancellationID, transferID, status);
        }

    }
}
