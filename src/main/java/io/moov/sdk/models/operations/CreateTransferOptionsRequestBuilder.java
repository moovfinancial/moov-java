/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.models.components.CreateTransferOptions;
import io.moov.sdk.utils.Headers;
import io.moov.sdk.utils.Utils;
import java.lang.String;

public class CreateTransferOptionsRequestBuilder {

    private String accountID;
    private CreateTransferOptions createTransferOptions;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateTransferOptionsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateTransferOptionsRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public CreateTransferOptionsRequestBuilder createTransferOptions(CreateTransferOptions createTransferOptions) {
        Utils.checkNotNull(createTransferOptions, "createTransferOptions");
        this.createTransferOptions = createTransferOptions;
        return this;
    }


    private CreateTransferOptionsRequest buildRequest() {

        CreateTransferOptionsRequest request = new CreateTransferOptionsRequest(accountID,
            createTransferOptions);

        return request;
    }

    public CreateTransferOptionsResponse call() {
        
        RequestOperation<CreateTransferOptionsRequest, CreateTransferOptionsResponse> operation
              = new io.moov.sdk.operations.CreateTransferOptions.Sync(sdkConfiguration, _headers);
        CreateTransferOptionsRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
