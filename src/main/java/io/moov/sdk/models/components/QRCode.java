/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class QRCode {
    /**
     * A base64-encoded PNG image of the QR code.
     */
    @JsonProperty("qrCode")
    private String qrCode;

    @JsonCreator
    public QRCode(
            @JsonProperty("qrCode") String qrCode) {
        Utils.checkNotNull(qrCode, "qrCode");
        this.qrCode = qrCode;
    }

    /**
     * A base64-encoded PNG image of the QR code.
     */
    @JsonIgnore
    public String qrCode() {
        return qrCode;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A base64-encoded PNG image of the QR code.
     */
    public QRCode withQrCode(String qrCode) {
        Utils.checkNotNull(qrCode, "qrCode");
        this.qrCode = qrCode;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QRCode other = (QRCode) o;
        return 
            Utils.enhancedDeepEquals(this.qrCode, other.qrCode);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            qrCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(QRCode.class,
                "qrCode", qrCode);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String qrCode;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * A base64-encoded PNG image of the QR code.
         */
        public Builder qrCode(String qrCode) {
            Utils.checkNotNull(qrCode, "qrCode");
            this.qrCode = qrCode;
            return this;
        }

        public QRCode build() {

            return new QRCode(
                qrCode);
        }

    }
}
