/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.moov.openapi.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.openapi.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class AchCreditSameDayPaymentMethod implements PaymentMethod {

    /**
     * ID of the payment method.
     */
    @JsonProperty("paymentMethodID")
    private String paymentMethodID;

    /**
     * Describes a bank account linked to a Moov account.
     */
    @JsonProperty("bankAccount")
    private BankAccount bankAccount;

    @JsonProperty("paymentMethodType")
    private AchCreditSameDayPaymentMethodPaymentMethodType paymentMethodType;

    @JsonCreator
    public AchCreditSameDayPaymentMethod(
            @JsonProperty("paymentMethodID") String paymentMethodID,
            @JsonProperty("bankAccount") BankAccount bankAccount,
            @JsonProperty("paymentMethodType") AchCreditSameDayPaymentMethodPaymentMethodType paymentMethodType) {
        Utils.checkNotNull(paymentMethodID, "paymentMethodID");
        Utils.checkNotNull(bankAccount, "bankAccount");
        Utils.checkNotNull(paymentMethodType, "paymentMethodType");
        this.paymentMethodID = paymentMethodID;
        this.bankAccount = bankAccount;
        this.paymentMethodType = paymentMethodType;
    }

    /**
     * ID of the payment method.
     */
    @JsonIgnore
    public String paymentMethodID() {
        return paymentMethodID;
    }

    /**
     * Describes a bank account linked to a Moov account.
     */
    @JsonIgnore
    public BankAccount bankAccount() {
        return bankAccount;
    }

    @JsonIgnore
    @Override
    public String paymentMethodType() {
        return Utils.discriminatorToString(paymentMethodType);
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * ID of the payment method.
     */
    public AchCreditSameDayPaymentMethod withPaymentMethodID(String paymentMethodID) {
        Utils.checkNotNull(paymentMethodID, "paymentMethodID");
        this.paymentMethodID = paymentMethodID;
        return this;
    }

    /**
     * Describes a bank account linked to a Moov account.
     */
    public AchCreditSameDayPaymentMethod withBankAccount(BankAccount bankAccount) {
        Utils.checkNotNull(bankAccount, "bankAccount");
        this.bankAccount = bankAccount;
        return this;
    }

    public AchCreditSameDayPaymentMethod withPaymentMethodType(AchCreditSameDayPaymentMethodPaymentMethodType paymentMethodType) {
        Utils.checkNotNull(paymentMethodType, "paymentMethodType");
        this.paymentMethodType = paymentMethodType;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AchCreditSameDayPaymentMethod other = (AchCreditSameDayPaymentMethod) o;
        return 
            Objects.deepEquals(this.paymentMethodID, other.paymentMethodID) &&
            Objects.deepEquals(this.bankAccount, other.bankAccount) &&
            Objects.deepEquals(this.paymentMethodType, other.paymentMethodType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            paymentMethodID,
            bankAccount,
            paymentMethodType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AchCreditSameDayPaymentMethod.class,
                "paymentMethodID", paymentMethodID,
                "bankAccount", bankAccount,
                "paymentMethodType", paymentMethodType);
    }
    
    public final static class Builder {
 
        private String paymentMethodID;
 
        private BankAccount bankAccount;
 
        private AchCreditSameDayPaymentMethodPaymentMethodType paymentMethodType;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the payment method.
         */
        public Builder paymentMethodID(String paymentMethodID) {
            Utils.checkNotNull(paymentMethodID, "paymentMethodID");
            this.paymentMethodID = paymentMethodID;
            return this;
        }

        /**
         * Describes a bank account linked to a Moov account.
         */
        public Builder bankAccount(BankAccount bankAccount) {
            Utils.checkNotNull(bankAccount, "bankAccount");
            this.bankAccount = bankAccount;
            return this;
        }

        public Builder paymentMethodType(AchCreditSameDayPaymentMethodPaymentMethodType paymentMethodType) {
            Utils.checkNotNull(paymentMethodType, "paymentMethodType");
            this.paymentMethodType = paymentMethodType;
            return this;
        }
        
        public AchCreditSameDayPaymentMethod build() {
            return new AchCreditSameDayPaymentMethod(
                paymentMethodID,
                bankAccount,
                paymentMethodType);
        }
    }
}

