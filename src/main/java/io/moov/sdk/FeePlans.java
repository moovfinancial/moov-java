/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.models.components.CreateFeePlanAgreement;
import io.moov.sdk.models.components.ListFeesFetchRequest;
import io.moov.sdk.models.operations.CreateFeePlanAgreementsRequest;
import io.moov.sdk.models.operations.CreateFeePlanAgreementsRequestBuilder;
import io.moov.sdk.models.operations.CreateFeePlanAgreementsResponse;
import io.moov.sdk.models.operations.GetResidualRequest;
import io.moov.sdk.models.operations.GetResidualRequestBuilder;
import io.moov.sdk.models.operations.GetResidualResponse;
import io.moov.sdk.models.operations.ListFeePlanAgreementsRequest;
import io.moov.sdk.models.operations.ListFeePlanAgreementsRequestBuilder;
import io.moov.sdk.models.operations.ListFeePlanAgreementsResponse;
import io.moov.sdk.models.operations.ListFeePlansRequest;
import io.moov.sdk.models.operations.ListFeePlansRequestBuilder;
import io.moov.sdk.models.operations.ListFeePlansResponse;
import io.moov.sdk.models.operations.ListFeesFetchRequestBuilder;
import io.moov.sdk.models.operations.ListFeesFetchResponse;
import io.moov.sdk.models.operations.ListPartnerPricingAgreementsRequest;
import io.moov.sdk.models.operations.ListPartnerPricingAgreementsRequestBuilder;
import io.moov.sdk.models.operations.ListPartnerPricingAgreementsResponse;
import io.moov.sdk.models.operations.ListPartnerPricingRequest;
import io.moov.sdk.models.operations.ListPartnerPricingRequestBuilder;
import io.moov.sdk.models.operations.ListPartnerPricingResponse;
import io.moov.sdk.models.operations.ListResidualFeesRequest;
import io.moov.sdk.models.operations.ListResidualFeesRequestBuilder;
import io.moov.sdk.models.operations.ListResidualFeesResponse;
import io.moov.sdk.models.operations.ListResidualsRequest;
import io.moov.sdk.models.operations.ListResidualsRequestBuilder;
import io.moov.sdk.models.operations.ListResidualsResponse;
import io.moov.sdk.models.operations.RetrieveFeesRequest;
import io.moov.sdk.models.operations.RetrieveFeesRequestBuilder;
import io.moov.sdk.models.operations.RetrieveFeesResponse;
import io.moov.sdk.operations.CreateFeePlanAgreements;
import io.moov.sdk.operations.GetResidual;
import io.moov.sdk.operations.ListFeePlanAgreements;
import io.moov.sdk.operations.ListFeePlans;
import io.moov.sdk.operations.ListFeesFetch;
import io.moov.sdk.operations.ListPartnerPricing;
import io.moov.sdk.operations.ListPartnerPricingAgreements;
import io.moov.sdk.operations.ListResidualFees;
import io.moov.sdk.operations.ListResiduals;
import io.moov.sdk.operations.RetrieveFees;
import io.moov.sdk.utils.Headers;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class FeePlans {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    FeePlans(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List all fee plan agreements associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public ListFeePlanAgreementsRequestBuilder listFeePlanAgreements() {
        return new ListFeePlanAgreementsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all fee plan agreements associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListFeePlanAgreementsResponse listFeePlanAgreements(ListFeePlanAgreementsRequest request) {
        RequestOperation<ListFeePlanAgreementsRequest, ListFeePlanAgreementsResponse> operation
              = new ListFeePlanAgreements.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Creates the subscription of a fee plan to a merchant account. Merchants are required to accept the
     * fee plan terms prior to activation.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.write` scope.
     * 
     * @return The call builder
     */
    public CreateFeePlanAgreementsRequestBuilder createFeePlanAgreements() {
        return new CreateFeePlanAgreementsRequestBuilder(sdkConfiguration);
    }

    /**
     * Creates the subscription of a fee plan to a merchant account. Merchants are required to accept the
     * fee plan terms prior to activation.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.write` scope.
     * 
     * @param accountID 
     * @param createFeePlanAgreement 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateFeePlanAgreementsResponse createFeePlanAgreements(String accountID, CreateFeePlanAgreement createFeePlanAgreement) {
        CreateFeePlanAgreementsRequest request =
            CreateFeePlanAgreementsRequest
                .builder()
                .accountID(accountID)
                .createFeePlanAgreement(createFeePlanAgreement)
                .build();
        RequestOperation<CreateFeePlanAgreementsRequest, CreateFeePlanAgreementsResponse> operation
              = new CreateFeePlanAgreements.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all fee plans available for use by an account. This is intended to be used by an account when
     * selecting a fee plan to apply to a connected account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public ListFeePlansRequestBuilder listFeePlans() {
        return new ListFeePlansRequestBuilder(sdkConfiguration);
    }

    /**
     * List all fee plans available for use by an account. This is intended to be used by an account when
     * selecting a fee plan to apply to a connected account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param accountID 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListFeePlansResponse listFeePlans(String accountID) {
        return listFeePlans(accountID, Optional.empty());
    }

    /**
     * List all fee plans available for use by an account. This is intended to be used by an account when
     * selecting a fee plan to apply to a connected account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param accountID 
     * @param planIDs A comma-separated list of plan IDs to filter the results by.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListFeePlansResponse listFeePlans(String accountID, Optional<? extends List<String>> planIDs) {
        ListFeePlansRequest request =
            ListFeePlansRequest
                .builder()
                .accountID(accountID)
                .planIDs(planIDs)
                .build();
        RequestOperation<ListFeePlansRequest, ListFeePlansResponse> operation
              = new ListFeePlans.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve fees associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/transfers.read` scope.
     * 
     * @return The call builder
     */
    public RetrieveFeesRequestBuilder retrieveFees() {
        return new RetrieveFeesRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve fees associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/transfers.read` scope.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RetrieveFeesResponse retrieveFees(RetrieveFeesRequest request) {
        RequestOperation<RetrieveFeesRequest, RetrieveFeesResponse> operation
              = new RetrieveFees.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List fees associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/transfers.read` scope.
     * 
     * @return The call builder
     */
    public ListFeesFetchRequestBuilder listFeesFetch() {
        return new ListFeesFetchRequestBuilder(sdkConfiguration);
    }

    /**
     * List fees associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/transfers.read` scope.
     * 
     * @param accountID 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListFeesFetchResponse listFeesFetch(String accountID) {
        return listFeesFetch(accountID, Optional.empty());
    }

    /**
     * List fees associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/transfers.read` scope.
     * 
     * @param accountID 
     * @param listFeesFetchRequest Array of fee IDs to fetch.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListFeesFetchResponse listFeesFetch(String accountID, Optional<? extends ListFeesFetchRequest> listFeesFetchRequest) {
        io.moov.sdk.models.operations.ListFeesFetchRequest request =
            io.moov.sdk.models.operations.ListFeesFetchRequest
                .builder()
                .accountID(accountID)
                .listFeesFetchRequest(listFeesFetchRequest)
                .build();
        RequestOperation<io.moov.sdk.models.operations.ListFeesFetchRequest, ListFeesFetchResponse> operation
              = new ListFeesFetch.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all partner pricing plans available for use by an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public ListPartnerPricingRequestBuilder listPartnerPricing() {
        return new ListPartnerPricingRequestBuilder(sdkConfiguration);
    }

    /**
     * List all partner pricing plans available for use by an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param accountID 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListPartnerPricingResponse listPartnerPricing(String accountID) {
        return listPartnerPricing(accountID, Optional.empty());
    }

    /**
     * List all partner pricing plans available for use by an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param accountID 
     * @param planIDs A comma-separated list of plan IDs to filter the results by.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListPartnerPricingResponse listPartnerPricing(String accountID, Optional<? extends List<String>> planIDs) {
        ListPartnerPricingRequest request =
            ListPartnerPricingRequest
                .builder()
                .accountID(accountID)
                .planIDs(planIDs)
                .build();
        RequestOperation<ListPartnerPricingRequest, ListPartnerPricingResponse> operation
              = new ListPartnerPricing.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all partner pricing agreements associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public ListPartnerPricingAgreementsRequestBuilder listPartnerPricingAgreements() {
        return new ListPartnerPricingAgreementsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all partner pricing agreements associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListPartnerPricingAgreementsResponse listPartnerPricingAgreements(ListPartnerPricingAgreementsRequest request) {
        RequestOperation<ListPartnerPricingAgreementsRequest, ListPartnerPricingAgreementsResponse> operation
              = new ListPartnerPricingAgreements.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all residuals associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public ListResidualsRequestBuilder listResiduals() {
        return new ListResidualsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all residuals associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListResidualsResponse listResiduals(ListResidualsRequest request) {
        RequestOperation<ListResidualsRequest, ListResidualsResponse> operation
              = new ListResiduals.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get a residual associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public GetResidualRequestBuilder getResidual() {
        return new GetResidualRequestBuilder(sdkConfiguration);
    }

    /**
     * Get a residual associated with an account.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param accountID 
     * @param residualID 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetResidualResponse getResidual(String accountID, String residualID) {
        GetResidualRequest request =
            GetResidualRequest
                .builder()
                .accountID(accountID)
                .residualID(residualID)
                .build();
        RequestOperation<GetResidualRequest, GetResidualResponse> operation
              = new GetResidual.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all fees associated with a residual.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @return The call builder
     */
    public ListResidualFeesRequestBuilder listResidualFees() {
        return new ListResidualFeesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all fees associated with a residual.
     * 
     * <p>To access this endpoint using an [access
     * token](https://docs.moov.io/api/authentication/access-tokens/)
     * you'll need to specify the `/accounts/{accountID}/profile.read` scope.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListResidualFeesResponse listResidualFees(ListResidualFeesRequest request) {
        RequestOperation<ListResidualFeesRequest, ListResidualFeesResponse> operation
              = new ListResidualFees.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
