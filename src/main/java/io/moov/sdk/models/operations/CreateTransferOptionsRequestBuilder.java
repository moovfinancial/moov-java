/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.models.components.Amount;
import io.moov.sdk.models.components.CreateTransferOptions;
import io.moov.sdk.models.components.SourceDestinationOptions;
import io.moov.sdk.operations.CreateTransferOptionsOperation;
import io.moov.sdk.utils.Utils;
import java.lang.Exception;

public class CreateTransferOptionsRequestBuilder {

    private SourceDestinationOptions source;
    private SourceDestinationOptions destination;
    private Amount amount;
    private final SDKConfiguration sdkConfiguration;

    public CreateTransferOptionsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateTransferOptionsRequestBuilder source(SourceDestinationOptions source) {
        Utils.checkNotNull(source, "source");
        this.source = source;
        return this;
    }

    public CreateTransferOptionsRequestBuilder destination(SourceDestinationOptions destination) {
        Utils.checkNotNull(destination, "destination");
        this.destination = destination;
        return this;
    }

    public CreateTransferOptionsRequestBuilder amount(Amount amount) {
        Utils.checkNotNull(amount, "amount");
        this.amount = amount;
        return this;
    }


    private CreateTransferOptions buildRequest() {

        CreateTransferOptions request = new CreateTransferOptions(source,
            destination,
            amount);

        return request;
    }

    public CreateTransferOptionsResponse call() throws Exception {
        
        RequestOperation<CreateTransferOptions, CreateTransferOptionsResponse> operation
              = new CreateTransferOptionsOperation(sdkConfiguration);
        CreateTransferOptions request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
