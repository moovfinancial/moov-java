/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.operations;

import static io.moov.sdk.operations.Operations.RequestOperation;

import io.moov.sdk.SDKConfiguration;
import io.moov.sdk.models.components.UpdateUnderwriting;
import io.moov.sdk.operations.UpsertUnderwriting;
import io.moov.sdk.utils.Headers;
import io.moov.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;

public class UpsertUnderwritingRequestBuilder {

    private String accountID;
    private UpdateUnderwriting updateUnderwriting;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public UpsertUnderwritingRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public UpsertUnderwritingRequestBuilder accountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public UpsertUnderwritingRequestBuilder updateUnderwriting(UpdateUnderwriting updateUnderwriting) {
        Utils.checkNotNull(updateUnderwriting, "updateUnderwriting");
        this.updateUnderwriting = updateUnderwriting;
        return this;
    }


    private UpsertUnderwritingRequest buildRequest() {

        UpsertUnderwritingRequest request = new UpsertUnderwritingRequest(accountID,
            updateUnderwriting);

        return request;
    }

    public UpsertUnderwritingResponse call() throws Exception {
        
        RequestOperation<UpsertUnderwritingRequest, UpsertUnderwritingResponse> operation
              = new UpsertUnderwriting.Sync(sdkConfiguration, _headers);
        UpsertUnderwritingRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
