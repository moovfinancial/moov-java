/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package io.moov.sdk.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class EnrichedAddressResponse {

    @JsonProperty("suggestions")
    private List<AddressSuggestion> suggestions;

    @JsonCreator
    public EnrichedAddressResponse(
            @JsonProperty("suggestions") List<AddressSuggestion> suggestions) {
        Utils.checkNotNull(suggestions, "suggestions");
        this.suggestions = suggestions;
    }

    @JsonIgnore
    public List<AddressSuggestion> suggestions() {
        return suggestions;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public EnrichedAddressResponse withSuggestions(List<AddressSuggestion> suggestions) {
        Utils.checkNotNull(suggestions, "suggestions");
        this.suggestions = suggestions;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EnrichedAddressResponse other = (EnrichedAddressResponse) o;
        return 
            Objects.deepEquals(this.suggestions, other.suggestions);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            suggestions);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EnrichedAddressResponse.class,
                "suggestions", suggestions);
    }
    
    public final static class Builder {
 
        private List<AddressSuggestion> suggestions;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder suggestions(List<AddressSuggestion> suggestions) {
            Utils.checkNotNull(suggestions, "suggestions");
            this.suggestions = suggestions;
            return this;
        }
        
        public EnrichedAddressResponse build() {
            return new EnrichedAddressResponse(
                suggestions);
        }
    }
}

