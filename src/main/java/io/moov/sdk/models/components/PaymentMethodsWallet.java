/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.moov.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class PaymentMethodsWallet {

    @JsonProperty("walletID")
    private String walletID;


    @JsonProperty("partnerAccountID")
    private String partnerAccountID;

    /**
     * Type of a wallet.
     * - `default`: The system-generated wallet automatically created when an account is granted the wallet
     * capability.
     * - `general`: An additional, user-defined wallet created via API or Dashboard.
     */
    @JsonProperty("walletType")
    private WalletType walletType;

    @JsonCreator
    public PaymentMethodsWallet(
            @JsonProperty("walletID") String walletID,
            @JsonProperty("partnerAccountID") String partnerAccountID,
            @JsonProperty("walletType") WalletType walletType) {
        Utils.checkNotNull(walletID, "walletID");
        Utils.checkNotNull(partnerAccountID, "partnerAccountID");
        Utils.checkNotNull(walletType, "walletType");
        this.walletID = walletID;
        this.partnerAccountID = partnerAccountID;
        this.walletType = walletType;
    }

    @JsonIgnore
    public String walletID() {
        return walletID;
    }

    @JsonIgnore
    public String partnerAccountID() {
        return partnerAccountID;
    }

    /**
     * Type of a wallet.
     * - `default`: The system-generated wallet automatically created when an account is granted the wallet
     * capability.
     * - `general`: An additional, user-defined wallet created via API or Dashboard.
     */
    @JsonIgnore
    public WalletType walletType() {
        return walletType;
    }

    public static Builder builder() {
        return new Builder();
    }


    public PaymentMethodsWallet withWalletID(String walletID) {
        Utils.checkNotNull(walletID, "walletID");
        this.walletID = walletID;
        return this;
    }

    public PaymentMethodsWallet withPartnerAccountID(String partnerAccountID) {
        Utils.checkNotNull(partnerAccountID, "partnerAccountID");
        this.partnerAccountID = partnerAccountID;
        return this;
    }

    /**
     * Type of a wallet.
     * - `default`: The system-generated wallet automatically created when an account is granted the wallet
     * capability.
     * - `general`: An additional, user-defined wallet created via API or Dashboard.
     */
    public PaymentMethodsWallet withWalletType(WalletType walletType) {
        Utils.checkNotNull(walletType, "walletType");
        this.walletType = walletType;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaymentMethodsWallet other = (PaymentMethodsWallet) o;
        return 
            Utils.enhancedDeepEquals(this.walletID, other.walletID) &&
            Utils.enhancedDeepEquals(this.partnerAccountID, other.partnerAccountID) &&
            Utils.enhancedDeepEquals(this.walletType, other.walletType);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            walletID, partnerAccountID, walletType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaymentMethodsWallet.class,
                "walletID", walletID,
                "partnerAccountID", partnerAccountID,
                "walletType", walletType);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String walletID;

        private String partnerAccountID;

        private WalletType walletType;

        private Builder() {
          // force use of static builder() method
        }


        public Builder walletID(String walletID) {
            Utils.checkNotNull(walletID, "walletID");
            this.walletID = walletID;
            return this;
        }


        public Builder partnerAccountID(String partnerAccountID) {
            Utils.checkNotNull(partnerAccountID, "partnerAccountID");
            this.partnerAccountID = partnerAccountID;
            return this;
        }


        /**
         * Type of a wallet.
         * - `default`: The system-generated wallet automatically created when an account is granted the wallet
         * capability.
         * - `general`: An additional, user-defined wallet created via API or Dashboard.
         */
        public Builder walletType(WalletType walletType) {
            Utils.checkNotNull(walletType, "walletType");
            this.walletType = walletType;
            return this;
        }

        public PaymentMethodsWallet build() {

            return new PaymentMethodsWallet(
                walletID, partnerAccountID, walletType);
        }

    }
}
