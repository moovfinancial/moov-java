/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.moov.sdk.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.moov.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class BrandColor {

    /**
     * A CSS hex color representing an accent color.
     */
    @JsonProperty("accent")
    private String accent;

    @JsonCreator
    public BrandColor(
            @JsonProperty("accent") String accent) {
        Utils.checkNotNull(accent, "accent");
        this.accent = accent;
    }

    /**
     * A CSS hex color representing an accent color.
     */
    @JsonIgnore
    public String accent() {
        return accent;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * A CSS hex color representing an accent color.
     */
    public BrandColor withAccent(String accent) {
        Utils.checkNotNull(accent, "accent");
        this.accent = accent;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BrandColor other = (BrandColor) o;
        return 
            Objects.deepEquals(this.accent, other.accent);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accent);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BrandColor.class,
                "accent", accent);
    }
    
    public final static class Builder {
 
        private String accent;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A CSS hex color representing an accent color.
         */
        public Builder accent(String accent) {
            Utils.checkNotNull(accent, "accent");
            this.accent = accent;
            return this;
        }
        
        public BrandColor build() {
            return new BrandColor(
                accent);
        }
    }
}

